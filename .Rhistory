df_pca  <- prcomp(t(exp))
per_sdv <- round(df_pca$sdev/sum(df_pca$sdev),4)*100
par(mar = c(5, 4, 1.4, 0.2))
plot(df_pca$x[,1], df_pca$x[,1],col = rep(2:6,each=4),xlab = paste('PC1 ',per_sdv[1],'%',sep = ''),ylab = paste('PC2 ',per_sdv[2],'%',sep = ''))
add_legend('right',unique(grp$condition), col = 1:length(unique(grp$condition)), pch=1)
plot(df_pca$x[,1], df_pca$x[,1],col = rep(2:6,each=4),xlab = paste('PC1 ',per_sdv[1],'%',sep = ''),ylab = paste('PC2 ',per_sdv[2],'%',sep = ''))
add_legend('right',unique(grp$condition), col = 1:length(unique(grp$condition)), pch=1,cex=0.9)
par(mar = c(5, 5, 5, 5))
plot(df_pca$x[,1], df_pca$x[,1],col = rep(2:6,each=4),xlab = paste('PC1 ',per_sdv[1],'%',sep = ''),ylab = paste('PC2 ',per_sdv[2],'%',sep = ''))
add_legend('right',unique(grp$condition), col = 1:length(unique(grp$condition)), pch=1,cex=0.9)
par(mar = c(5, 5, 5, 15))
plot(df_pca$x[,1], df_pca$x[,1],col = rep(2:6,each=4),xlab = paste('PC1 ',per_sdv[1],'%',sep = ''),ylab = paste('PC2 ',per_sdv[2],'%',sep = ''))
add_legend('right',unique(grp$condition), col = 1:length(unique(grp$condition)), pch=1,cex=0.9)
par(mar = c(5, 5, 5, 10))
plot(df_pca$x[,1], df_pca$x[,1],col = rep(2:6,each=4),xlab = paste('PC1 ',per_sdv[1],'%',sep = ''),ylab = paste('PC2 ',per_sdv[2],'%',sep = ''))
add_legend('right',unique(grp$condition), col = 1:length(unique(grp$condition)), pch=1,cex=0.9)
plot(df_pca$x[,1], df_pca$x[,1],col = rep(2:6,each=4),xlab = paste('PC1 ',per_sdv[1],'%',sep = ''),ylab = paste('PC2 ',per_sdv[2],'%',sep = ''))
add_legend('right',unique(grp$condition), col = 1:length(unique(grp$condition)), pch=1,cex=0.7)
par(mar = c(5, 5, 5, 8))
plot(df_pca$x[,1], df_pca$x[,1],col = rep(2:6,each=4),xlab = paste('PC1 ',per_sdv[1],'%',sep = ''),ylab = paste('PC2 ',per_sdv[2],'%',sep = ''))
add_legend('right',unique(grp$condition), col = 1:length(unique(grp$condition)), pch=1,cex=0.7)
plot(df_pca$x[,1], df_pca$x[,2],col = rep(2:6,each=4),xlab = paste('PC1 ',per_sdv[1],'%',sep = ''),ylab = paste('PC2 ',per_sdv[2],'%',sep = ''))
add_legend('right',unique(grp$condition), col = 1:length(unique(grp$condition)), pch=1,cex=0.7)
df_pca$x[,1]
par(mar = c(5, 5, 5, 8))
plot(df_pca$x[,1], df_pca$x[,2],col = rep(2:6,each=4),xlab = paste('PC1 ',per_sdv[1],'%',sep = ''),ylab = paste('PC2 ',per_sdv[2],'%',sep = ''))
add_legend(max(df_pca$x[,1])*1.05,mean(max(df_pca$x[,2]),min(df_pca$x[,2])),unique(grp$condition), col = 1:length(unique(grp$condition)), pch=1,cex=0.7)
max(df_pca$x[,1])*1.05
add_legend(max(df_pca$x[,1])*0.95,mean(max(df_pca$x[,2]),min(df_pca$x[,2])),unique(grp$condition), col = 1:length(unique(grp$condition)), pch=1,cex=0.7)
mean(max(df_pca$x[,2]),min(df_pca$x[,2]))
pca_res  <- prcomp(t(exp))
per_sdv <- round(pca_res$sdev/sum(pca_res$sdev),4)*100
df_pca <- data.frame('PC1'=pca_res$x[,1],'PC2'=pca_res$x[,2],'Condition'=grp$condition)
df_pca
library(ggplot2)
ggplot(data = df_pca)
ggplot(data = df_pca,aes(x=PC1, y=PC2))
df_pca
ggplot(data = df_pca,aes(x=PC1, y=PC2))+geom_point(size=2, shape=23)
ggplot(data = df_pca,aes(x=PC1, y=PC2,color=Condition))+geom_point(size=2, shape=23)
ggplot(data = df_pca,aes(x=PC1, y=PC2,color=Condition))+geom_point()
ggplot(data = df_pca,aes(x=PC1, y=PC2,color=Condition))+geom_point(size=3)
plot_pca_2pc <- function(exp,grp){
library(ggplot2)
if(sum(colnames(exp)!=rownames(grp))>0){
warning('rownames of expression matrix must be identical as rownames of group table')
}
pca_res  <- prcomp(t(exp))
per_sdv <- round(pca_res$sdev/sum(pca_res$sdev),4)*100
df_pca <- data.frame('PC1'=pca_res$x[,1],'PC2'=pca_res$x[,2],'Condition'=grp$condition)
ggplot(data = df_pca,aes(x=PC1, y=PC2,color=Condition))+geom_point(size=3)+labs(x = paste('PC1 ',per_sdv[1],'%',sep = ''),y = paste('PC2 ',per_sdv[2],'%',sep = ''))
}
plot_pca_2pc <- function(exp,grp){
library(ggplot2)
if(sum(colnames(exp)!=rownames(grp))>0){
warning('rownames of expression matrix must be identical as rownames of group table')
}
pca_res  <- prcomp(t(exp))
per_sdv <- round(pca_res$sdev/sum(pca_res$sdev),4)*100
df_pca <- data.frame('PC1'=pca_res$x[,1],'PC2'=pca_res$x[,2],'Condition'=grp$condition)
g <- ggplot(data = df_pca,aes(x=PC1, y=PC2,color=Condition))+geom_point(size=3)+labs(x = paste('PC1 ',per_sdv[1],'%',sep = ''),y = paste('PC2 ',per_sdv[2],'%',sep = ''))
}
g <- plot_pca_2pc(exp,grp)
g
plot_pca <- function(i,j,df_pca){
if(i==j){
plot(df_pca$x[,i], df_pca$x[,j],col='white',xlab = '',ylab = '',xaxt='n',yaxt='n')
legend('center',legend = paste('PC',i),cex = 3,bty = 'n')
}else{
plot(df_pca$x[,j], df_pca$x[,i],col = rep(2:6,each=4),pch = rep(c(1,2),10),xlab = '',ylab = '')
# legend('bottomleft', legend=c(rownames(meta)),col=1:5,pch=1)
# legend('bottomright', legend=c('set1','set2'),pch=1:2)
}
}
plot_pca <- function(i,j,df_pca){
if(i==j){
plot(df_pca$x[,i], df_pca$x[,j],col='white',xlab = '',ylab = '',xaxt='n',yaxt='n')
legend('center',legend = paste('PC',i),cex = 3,bty = 'n')
}else{
plot(df_pca$x[,j], df_pca$x[,i],col = rep(2:6,each=4),pch = rep(c(1,2),10),xlab = '',ylab = '')
}
}
plot_pca <- function(i,j,df_pca){
if(i==j){
plot(df_pca$x[,i], df_pca$x[,j],col='white',xlab = '',ylab = '',xaxt='n',yaxt='n')
legend('center',legend = paste('PC',i),cex = 3,bty = 'n')
}else{
plot(df_pca$x[,j], df_pca$x[,i],col = 1,xlab = '',ylab = '')
}
}
df_pca <- prcomp(t(exp))
par(mfrow=c(3,3))
for(i in 1:3){
for(j in 1:3){
plot_pca(i,j,df_pca)
}
}
plot_pca <- function(i,j,df_pca,col){
if(i==j){
plot(df_pca$x[,i], df_pca$x[,j],col='white',xlab = '',ylab = '',xaxt='n',yaxt='n')
legend('center',legend = paste('PC',i),cex = 3,bty = 'n')
}else{
per_sdv <- round(pca_res$sdev/sum(pca_res$sdev),4)*100
plot(df_pca$x[,j], df_pca$x[,i],col = col,xlab = paste('PC',i,' ',per_sdv[i],'%',sep = ''),ylab = paste('PC',j,' ',per_sdv[j],'%',sep = ''))
}
}
i
j
df_pca <- prcomp(t(exp))
par(mfrow=c(3,3))
for(i in 1:3){
for(j in 1:3){
plot_pca(i,j,df_pca,col = factor(grp$condition))
}
}
exp <- read.delim('https://raw.githubusercontent.com/chrischen1/rnaseq/master/example/input/test.count')
grp <- read.delim('https://raw.githubusercontent.com/chrischen1/rnaseq/master/example/input/group.tsv',as.is = T)
plot_pca_2pc(exp,grp)
plot_pca_3pc(exp,grp)
plot_pca_3pc <- function(exp,grp){
if(sum(colnames(exp)!=rownames(grp))>0){
warning('rownames of expression matrix must be identical as rownames of group table')
}
df_pca <- prcomp(t(exp))
par(mfrow=c(3,3))
for(i in 1:3){
for(j in 1:3){
plot_pca(i,j,df_pca,col = factor(grp$condition))
}
}
}
plot_pca_2pc(exp,grp)
plot_pca_3pc(exp,grp)
plot(g)
plot_pca_2pc <- function(exp,grp){
library(ggplot2)
if(sum(colnames(exp)!=rownames(grp))>0){
warning('rownames of expression matrix must be identical as rownames of group table')
}
pca_res  <- prcomp(t(exp))
per_sdv <- round(pca_res$sdev/sum(pca_res$sdev),4)*100
df_pca <- data.frame('PC1'=pca_res$x[,1],'PC2'=pca_res$x[,2],'Condition'=grp$condition)
g <- ggplot(data = df_pca,aes(x=PC1, y=PC2,color=Condition))+geom_point(size=3)+labs(x = paste('PC1 ',per_sdv[1],'%',sep = ''),y = paste('PC2 ',per_sdv[2],'%',sep = ''))
plot(g)
}
plot_pca_3pc <- function(exp,grp){
if(sum(colnames(exp)!=rownames(grp))>0){
warning('rownames of expression matrix must be identical as rownames of group table')
}
df_pca <- prcomp(t(exp))
par(mfrow=c(3,3))
for(i in 1:3){
for(j in 1:3){
plot_pca(i,j,df_pca,col = factor(grp$condition))
}
}
}
plot_pca_2pc(exp,grp)
plot_pca_3pc(exp,grp)
source('https://raw.githubusercontent.com/chrischen1/rnaseq/master/de_rnaseq.R')
source('https://raw.githubusercontent.com/chrischen1/rnaseq/master/plot_utils.R')
outpath = '~/Dropbox/MU/workspace/hailong_project/data/plots/'
total_drop = 15
phos_drop = c(5,10)
meta <- read.csv('~/Dropbox/MU/workspace/hailong_project/data/meta.csv',as.is = T,row.names = 1)
proteomset1 = read.csv('~/Dropbox/MU/workspace/hailong_project/data/raw/proteomset1.csv',as.is = T)
proteomset2 = read.csv('~/Dropbox/MU/workspace/hailong_project/data/raw/proteomset2.csv',as.is = T)
phosphoSet1 = read.csv('~/Dropbox/MU/workspace/hailong_project/data/raw/phosphoSet1.csv',as.is = T)
phosphoSet2 = read.csv('~/Dropbox/MU/workspace/hailong_project/data/raw/phosphoSet2.csv',as.is = T)
rownames(proteomset1) <- proteomset1$Accession
rownames(proteomset2) <- proteomset2$Accession
rownames(phosphoSet1) <- phosphoSet1$Accession
rownames(phosphoSet2) <- phosphoSet2$Accession
library(pheatmap)
col_idx <- c()
for(i in seq(1,10,2)){
col_idx <- c(col_idx,c(i,i+1,i+10,i+11))
}
meta_df <- data.frame('Condition'=rep(rownames(meta),each=4),'Batch'=rep(rep(c('Set1','Set2'),each=2),5))
meta_df$Condition <- factor(meta_df$Condition,levels(meta_df$Condition)[c(5,3,1,4,2)])
# parse sets
norm_ms <- function(proteomset1_data,proteomset2_data,col_idx){
proteomset1_data[is.na(proteomset1_data)] <- 0
proteomset1_data <- proteomset1_data[apply(proteomset1_data, 1, sum)>0,]
proteomset2_data[is.na(proteomset2_data)] <- 0
proteomset2_data <- proteomset2_data[apply(proteomset2_data, 1, sum)>0,]
all_protein <- intersect(rownames(proteomset1_data),rownames(proteomset2_data))
total1 <- proteomset1_data[all_protein,]
total2 <- proteomset2_data[all_protein,]
total1[is.na(total1)] <- 0
total2[is.na(total2)] <- 0
rownames(total1) <- rownames(total2) <- all_protein
coefficient_total <- apply(total2, 1, mean)/apply(total1, 1, mean)
coefficient_total[is.nan(coefficient_total)] <- 1
coefficient_total[is.infinite(coefficient_total)] <- max(coefficient_total[!is.infinite(coefficient_total)])
proteomset_comb_norm <- cbind.data.frame(total1,total2/coefficient_total)
proteomset_comb_norm <- proteomset_comb_norm[coefficient_total>0,]
proteomset_comb_norm <- apply(proteomset_comb_norm, 2, function(x)x/mean(x))
proteomset_comb_norm2 <- proteomset_comb_norm[,col_idx]
prot_drop_all <- c()
for(i in 1:5){
var_list <- apply(proteomset_comb_norm2[,(1+4*(i-1)):(4+4*(i-1))],1,var)/apply(proteomset_comb_norm2,1,var)
prot_drop_all <- c(prot_drop_all,names(var_list)[var_list>quantile(var_list,0.95)])
}
prot_drop_all <- unique(prot_drop_all)
# proteomset_comb_norm2 <- proteomset_comb_norm2[!rownames(proteomset_comb_norm2)%in%prot_drop_all,]
return(proteomset_comb_norm2)
}
ms_de <- function(proteomset_comb_norm,grp,proteomset1,proteomset2,info_col=6:15,total_drop){
stats_mat <- NULL
stats_mat_colname <- c()
for(i in 1:length(grp)){
ref_idx <- grp[[i]][2,]
treatment_idx <- grp[[i]][1,]
ref_idx <- ref_idx[!ref_idx%in%total_drop]
treatment_idx <- treatment_idx[!treatment_idx%in%total_drop]
fc <- apply(proteomset_comb_norm[,treatment_idx],1,mean)/apply(proteomset_comb_norm[,ref_idx],1,mean)
# wilcox_pval <- apply(proteomset_comb_norm,1,function(x)(wilcox.test(x[ref_idx],x[ref_idx])$p.value))
wilcox_pval <- apply(proteomset_comb_norm,1,function(x)(t.test(x[treatment_idx],x[ref_idx])$p.value))
if(is.null(stats_mat)){
stats_mat <- cbind(fc,wilcox_pval)
}else{
stats_mat <- cbind(stats_mat,fc,wilcox_pval)
}
stats_mat_colname <- c(stats_mat_colname,paste(names(grp)[i],'FC',sep = '_'),paste(names(grp)[i],'pval',sep = '_'))
}
colnames(stats_mat) <- stats_mat_colname
stats_mat[is.na(stats_mat)] <- 1
stats_mat[is.infinite(stats_mat)] <- max(stats_mat[!is.infinite(stats_mat)])
proteomset1 <- proteomset1[rownames(proteomset_comb_norm),]
proteomset2 <- proteomset2[rownames(proteomset_comb_norm),]
protein_info <- cbind('Accession'=proteomset1$Accession,'Description'=proteomset1$Description)
total_set1_info <- proteomset1[rownames(proteomset_comb_norm),info_col]
colnames(total_set1_info) <- paste(colnames(total_set1_info),'set1',sep = '_')
total_set2_info <- proteomset2[rownames(proteomset_comb_norm),info_col]
colnames(total_set2_info) <- paste(colnames(total_set2_info),'set2',sep = '_')
stats_mat_all <- cbind(protein_info,total_set1_info[rownames(stats_mat),],total_set2_info[rownames(stats_mat),],stats_mat)
stats_mat_all[is.na(stats_mat_all)] <- 'NOT_DETECTED_IN_SET'
return(stats_mat_all)
}
#normalize
# parse total sets
proteomset1_data <- proteomset1[,25:34]
proteomset2_data <- proteomset2[,25:34]
proteomset_comb_norm2 <- norm_ms(proteomset1_data,proteomset2_data,col_idx)
proteomset_plot_data <- log2(proteomset_comb_norm2+1-min(proteomset_comb_norm2))
colnames(proteomset_plot_data) <- 1:20
proteomset_plot_data[proteomset_plot_data>1] <-1
tiff(paste(outpath,'heatmap_total.png',sep = ''))
pheatmap(proteomset_plot_data[,-(total_drop)],annotation_col = meta_df,cluster_cols = F,show_rownames = F,scale = 'none')
dev.off()
phosphoSet1_data <- phosphoSet1[,grep('Abundance..',colnames(phosphoSet1),fixed = T)]
phosphoSet2_data <- phosphoSet2[,grep('Abundance..',colnames(phosphoSet2),fixed = T)]
phosphoSet_comb_norm2 <- norm_ms(phosphoSet1_data,phosphoSet2_data,col_idx)
phosphoSet_plot_data <- log2(phosphoSet_comb_norm2+1-min(phosphoSet_comb_norm2))
colnames(phosphoSet_plot_data) <- 1:20
phosphoSet_plot_data[phosphoSet_plot_data>3]<-3
tiff(paste(outpath,'heatmap_phos.png',sep = ''))
pheatmap(phosphoSet_plot_data[,-(phos_drop)],annotation_col = meta_df,cluster_cols = F,show_rownames = F,scale = 'none')
dev.off()
grp <- list()
for(i in 1:(nrow(meta)-1)){
for(j in (i+1):nrow(meta)){
grp_i <- (1:4)+(i-1)*4
grp_j <- (1:4)+(j-1)*4
grp[[paste(rownames(meta)[j],'vs',rownames(meta)[i],sep = '_')]] <- rbind(grp_j,grp_i)
}
}
#total
stats_mat_all <- ms_de(proteomset_comb_norm2,grp,proteomset1 = proteomset1,proteomset2 = proteomset2,total_drop = total_drop)
apply(stats_mat_all[,grep('pval',colnames(stats_mat_all))],2,function(x)sum(x<0.05))
aaa=stats_mat_all$`3M_30DPI_vs_3M_7DPI_pval`
aaa
bbb=p.adjust(stats_mat_all$`3M_30DPI_vs_3M_7DPI_pval`)
fdr
?p.adjust
p.adjust.methods
ms_de <- function(proteomset_comb_norm,grp,proteomset1,proteomset2,info_col=6:15,total_drop){
stats_mat <- NULL
stats_mat_colname <- c()
for(i in 1:length(grp)){
ref_idx <- grp[[i]][2,]
treatment_idx <- grp[[i]][1,]
ref_idx <- ref_idx[!ref_idx%in%total_drop]
treatment_idx <- treatment_idx[!treatment_idx%in%total_drop]
fc <- apply(proteomset_comb_norm[,treatment_idx],1,mean)/apply(proteomset_comb_norm[,ref_idx],1,mean)
# wilcox_pval <- apply(proteomset_comb_norm,1,function(x)(wilcox.test(x[ref_idx],x[ref_idx])$p.value))
wilcox_pval <- apply(proteomset_comb_norm,1,function(x)(t.test(x[treatment_idx],x[ref_idx])$p.value))
fdr <- p.adjust(wilcox_pval,method = 'fdr')
if(is.null(stats_mat)){
stats_mat <- cbind(fc,wilcox_pval,fdr)
}else{
stats_mat <- cbind(stats_mat,fc,wilcox_pval,fdr)
}
stats_mat_colname <- c(stats_mat_colname,paste(names(grp)[i],'FC',sep = '_'),paste(names(grp)[i],'pval',sep = '_'),paste(names(grp)[i],'FDR',sep = '_'))
}
colnames(stats_mat) <- stats_mat_colname
stats_mat[is.na(stats_mat)] <- 1
stats_mat[is.infinite(stats_mat)] <- max(stats_mat[!is.infinite(stats_mat)])
proteomset1 <- proteomset1[rownames(proteomset_comb_norm),]
proteomset2 <- proteomset2[rownames(proteomset_comb_norm),]
protein_info <- cbind('Accession'=proteomset1$Accession,'Description'=proteomset1$Description)
total_set1_info <- proteomset1[rownames(proteomset_comb_norm),info_col]
colnames(total_set1_info) <- paste(colnames(total_set1_info),'set1',sep = '_')
total_set2_info <- proteomset2[rownames(proteomset_comb_norm),info_col]
colnames(total_set2_info) <- paste(colnames(total_set2_info),'set2',sep = '_')
stats_mat_all <- cbind(protein_info,total_set1_info[rownames(stats_mat),],total_set2_info[rownames(stats_mat),],stats_mat)
stats_mat_all[is.na(stats_mat_all)] <- 'NOT_DETECTED_IN_SET'
return(stats_mat_all)
}
#total
stats_mat_all <- ms_de(proteomset_comb_norm2,grp,proteomset1 = proteomset1,proteomset2 = proteomset2,total_drop = total_drop)
head(stats_mat_all)
sig_pval_total <- apply(stats_mat_all[,grep('pval',colnames(stats_mat_all))],2,function(x)sum(x<0.05))
sig_fdr_total <- apply(stats_mat_all[,grep('FDR',colnames(stats_mat_all))],2,function(x)sum(x<0.05))
sig_fdr_total
sig_fdr_total <- apply(stats_mat_all[,grep('FDR',colnames(stats_mat_all))],2,function(x)sum(x<0.1))
sig_fdr_total
sig_pval_total
sig_fdr_total
tiff(paste(outpath,'heatmap_total.tiff',sep = ''))
pheatmap(proteomset_plot_data[,-(total_drop)],annotation_col = meta_df,cluster_cols = F,show_rownames = F,scale = 'none')
dev.off()
tiff(paste(outpath,'heatmap_phos.tiff',sep = ''))
pheatmap(phosphoSet_plot_data[,-(phos_drop)],annotation_col = meta_df,cluster_cols = F,show_rownames = F,scale = 'none')
dev.off()
#phospho
stats_mat_phos <- ms_de(phosphoSet_comb_norm2,grp,proteomset1 = phosphoSet1,proteomset2 = phosphoSet2,info_col = 6:18,total_drop = phos_drop)
apply(stats_mat_phos[,grep('pval',colnames(stats_mat_phos))],2,function(x)sum(x<0.05))
write.table(stats_mat_phos,'~/Dropbox/MU/workspace/hailong_project/data/stats_wtest_phos.txt',sep = '\t',quote = F)
# plot PCA
library(rgl)
r3dDefaults$windowRect <- c(0,50, 700, 700)
#total
proteomset_comb_norm3 <- proteomset_comb_norm2[,-(total_drop)]
col_table <- rep(2:6,each=4)[-(total_drop)]
df_pca_total  <- prcomp(t(proteomset_comb_norm3))
plot3d(df_pca_total$x[,1:3], col=col_table,type = 'p',cex=3)
legend3d("topright", legend =rownames(meta),col=2:6,pch=16,cex=1)
snapshot3d(paste(outpath,'total_pca3d_pc1_pc3.png',sep = ''))
library(rgl)
r3dDefaults$windowRect <- c(0,50, 700, 700)
#total
proteomset_comb_norm3 <- proteomset_comb_norm2[,-(total_drop)]
col_table <- rep(c(2:5,7),each=4)[-(total_drop)]
df_pca_total  <- prcomp(t(proteomset_comb_norm3))
plot3d(df_pca_total$x[,1:3], col=col_table,type = 'p',cex=8)
legend3d("topright", legend =rownames(meta),col=c(2:5,7),pch=16,cex=1)
snapshot3d(paste(outpath,'total_pca3d_pc1_pc3.png',sep = ''))
library(rgl)
r3dDefaults$windowRect <- c(0,50, 700, 700)
#total
proteomset_comb_norm3 <- proteomset_comb_norm2[,-(total_drop)]
col_table <- rep(c(2:5,8),each=4)[-(total_drop)]
df_pca_total  <- prcomp(t(proteomset_comb_norm3))
plot3d(df_pca_total$x[,1:3], col=col_table,type = 'p',cex=8)
legend3d("topright", legend =rownames(meta),col=c(2:5,8),pch=16,cex=1)
snapshot3d(paste(outpath,'total_pca3d_pc1_pc3.png',sep = ''))
# plot PCA
library(rgl)
r3dDefaults$windowRect <- c(0,50, 700, 700)
#total
proteomset_comb_norm3 <- proteomset_comb_norm2[,-(total_drop)]
col_table <- rep(1:5,each=4)[-(total_drop)]
df_pca_total  <- prcomp(t(proteomset_comb_norm3))
plot3d(df_pca_total$x[,1:3], col=col_table,type = 'p',cex=8)
legend3d("topright", legend =rownames(meta),col=1:5,pch=16,cex=1)
snapshot3d(paste(outpath,'total_pca3d_pc1_pc3.png',sep = ''))
library(rgl)
r3dDefaults$windowRect <- c(0,50, 700, 700)
#total
proteomset_comb_norm3 <- proteomset_comb_norm2[,-(total_drop)]
col_table <- rep(1:5,each=4)[-(total_drop)]
df_pca_total  <- prcomp(t(proteomset_comb_norm3))
plot3d(df_pca_total$x[,1:3], col=col_table,type = 'p',cex=8)
legend3d("topright", legend =rownames(meta),col=1:5,pch=16,cex=1)
snapshot3d(paste(outpath,'total_pca3d_pc1_pc3.tiff',sep = ''))
?plot3d
plot3d(df_pca_total$x[,1:3], col=col_table,type = 'p',size=3)
legend3d("topright", legend =rownames(meta),col=1:5,pch=16,cex=1)
snapshot3d(paste(outpath,'total_pca3d_pc1_pc3.tiff',sep = ''))
plot3d(df_pca_total$x[,1:3], col=col_table,type = 'p',size=6)
legend3d("topright", legend =rownames(meta),col=1:5,pch=16,cex=1)
snapshot3d(paste(outpath,'total_pca3d_pc1_pc3.tiff',sep = ''))
#total
proteomset_comb_norm3 <- proteomset_comb_norm2[,-(total_drop)]
col_table <- rep(1:5,each=4)[-(total_drop)]
df_pca_total  <- prcomp(t(proteomset_comb_norm3))
plot3d(df_pca_total$x[,1:3], col=col_table,type = 'p',size=6)
legend3d("topright", legend =rownames(meta),col=1:5,pch=16,cex=1)
snapshot3d(paste(outpath,'total_pca3d_pc1_pc3.tiff',sep = ''))
plot3d(df_pca_total$x[,c(1,3,2)], col=col_table,type = 'p',size=6)
legend3d("topright", legend =rownames(meta),col=1:5,pch=16,cex=1)
snapshot3d(paste(outpath,'total_pca3d_pc1_pc2.tiff',sep = ''))
plot3d(df_pca_total$x[,c(2,1,3)], col=col_table,type = 'p',size=6)
legend3d("topright", legend =rownames(meta),col=1:5,pch=16,cex=1)
snapshot3d(paste(outpath,'total_pca3d_pc2_pc3.tiff',sep = ''))
#phos
phosphoSet_comb_norm3 <- phosphoSet_comb_norm2[,-(phos_drop)]
col_table <- rep(2:6,each=4)[-(phos_drop)]
df_pca_phos  <- prcomp(t(phosphoSet_comb_norm3))
plot3d(df_pca_phos$x[,1:3], col=col_table,type = 'p',size=6)
legend3d("topright", legend =rownames(meta),col=1:5,pch=16,cex=1)
snapshot3d(paste(outpath,'phos_pca3d_pc1_pc3.tiff',sep = ''))
plot3d(df_pca_phos$x[,c(1,3,2)], col=col_table,type = 'p',size=6)
legend3d("topright", legend =rownames(meta),col=1:5,pch=16,cex=1)
snapshot3d(paste(outpath,'phos_pca3d_pc1_pc2.tiff',sep = ''))
plot3d(df_pca_phos$x[,c(2,1,3)], col=col_table,type = 'p',size=6)
legend3d("topright", legend =rownames(meta),col=1:5,pch=16,cex=1)
snapshot3d(paste(outpath,'phos_pca3d_pc2_pc3.tiff',sep = ''))
write.table(proteomset_comb_norm2,'~/Dropbox/MU/workspace/hailong_project/data/raw_total_normalized.txt',sep = '\t',quote = F)
write.table(phosphoSet_comb_norm2,'~/Dropbox/MU/workspace/hailong_project/data/raw_phos_normalized.txt',sep = '\t',quote = F)
stat_all_pval <- stats_mat_all[,grep('pval',colnames(stats_mat_all))]
stat_all_fc <- stats_mat_all[,grep('FC',colnames(stats_mat_all))]
colnames(stat_all_pval) <- gsub('_pval','',colnames(stat_all_pval))
for(i in 1:ncol(stat_all_pval)){
tiff(paste(outpath,'volcano/',colnames(stat_all_pval)[i],'_total.tiff',sep = ''),width = 800,height = 800)
plot_volcano_pval(Fold_Change = stat_all_fc[,i],P_Value = stat_all_pval[,i],show_lines = F,left = 0,right = 0,col_cutoff = 0,xlim = max(abs(log2(stat_all_fc[,i]+1)))*1.1,ylim = 3.5)
dev.off()
}
stat_phos_pval <- stats_mat_phos[,grep('pval',colnames(stats_mat_phos))]
stat_phos_fc <- stats_mat_phos[,grep('FC',colnames(stats_mat_phos))]
colnames(stat_phos_pval) <- gsub('_pval','',colnames(stat_phos_pval))
for(i in 1:ncol(stat_phos_pval)){
png(paste(outpath,'volcano/',colnames(stat_phos_pval)[i],'_phos.tiff',sep = ''),width = 800,height = 800)
plot_volcano_pval(Fold_Change = stat_phos_fc[,i],P_Value = stat_phos_pval[,i],show_lines = F,left = 0,right = 0,col_cutoff = 0,xlim = max(abs(log2(stat_phos_fc[,i]+1)))*1.1,ylim = 3.5)
dev.off()
}
for(i in 1:ncol(stat_phos_pval)){
tiff(paste(outpath,'volcano/',colnames(stat_phos_pval)[i],'_phos.tiff',sep = ''),width = 800,height = 800)
plot_volcano_pval(Fold_Change = stat_phos_fc[,i],P_Value = stat_phos_pval[,i],show_lines = F,left = 0,right = 0,col_cutoff = 0,xlim = max(abs(log2(stat_phos_fc[,i]+1)))*1.1,ylim = 3.5)
dev.off()
}
stat_all_pval <- stats_mat_all[,grep('pval',colnames(stats_mat_all))]
stat_all_fc <- stats_mat_all[,grep('FC',colnames(stats_mat_all))]
colnames(stat_all_pval) <- gsub('_pval','',colnames(stat_all_pval))
for(i in 1:ncol(stat_all_pval)){
tiff(paste(outpath,'volcano/',colnames(stat_all_pval)[i],'_total.tiff',sep = ''),width = 800,height = 800)
plot_volcano_pval(Fold_Change = stat_all_fc[,i],P_Value = stat_all_pval[,i],show_lines = F,left = 0,right = 0,col_cutoff = 0,xlim = 1.1,ylim = 3.5)
dev.off()
}
stat_phos_pval <- stats_mat_phos[,grep('pval',colnames(stats_mat_phos))]
stat_phos_fc <- stats_mat_phos[,grep('FC',colnames(stats_mat_phos))]
colnames(stat_phos_pval) <- gsub('_pval','',colnames(stat_phos_pval))
for(i in 1:ncol(stat_phos_pval)){
tiff(paste(outpath,'volcano/',colnames(stat_phos_pval)[i],'_phos.tiff',sep = ''),width = 800,height = 800)
plot_volcano_pval(Fold_Change = stat_phos_fc[,i],P_Value = stat_phos_pval[,i],show_lines = F,left = 0,right = 0,col_cutoff = 0,xlim = max(abs(log2(stat_phos_fc[,i]+1)))*1.1,ylim = 3.5)
dev.off()
}
library(VennDiagram)
venn_list_total <- list()
for(i in colnames(stat_all_pval)[1:4]){
venn_list_total[[i]] <- rownames(stat_all_pval)[stat_all_pval[,i]<0.05]
}
venn.plot <- venn.diagram(venn_list_total,paste(outpath,"Venn_total.tiff",sep = ''),width = 4560)
venn_list_phos <- list()
for(i in colnames(stat_phos_pval)[1:4]){
venn_list_phos[[i]] <- rownames(stat_phos_pval)[stat_phos_pval[,i]<0.05]
}
venn.plot <- venn.diagram(venn_list_phos,paste(outpath,"Venn_phos.tiff",sep = ''),width = 4560)
#heatmap with sig genes only
sig_genes_total <- rownames(stats_mat_all)[apply(stats_mat_all[,grep('pval')], 1, function(x)sum(x<0.05))>0]
#heatmap with sig genes only
sig_genes_total <- rownames(stats_mat_all)[apply(stats_mat_all[,grep('pval',colnames(stats_mat_all))], 1, function(x)sum(x<0.05))>0]
sig_genes_total
sig_genes_phos <- rownames(stats_mat_phos)[apply(stats_mat_phos[,grep('pval',colnames(stats_mat_phos))], 1, function(x)sum(x<0.05))>0]
sig_genes_phos
head(phosphoSet_plot_data)
tiff(paste(outpath,'heatmap_total_sig_only.tiff',sep = ''))
pheatmap(proteomset_plot_data[sig_genes_total,-(total_drop)],annotation_col = meta_df,cluster_cols = F,show_rownames = F,scale = 'none')
dev.off()
tiff(paste(outpath,'heatmap_phos_sig_only.tiff',sep = ''))
pheatmap(phosphoSet_plot_data[sig_genes_phos,-(phos_drop)],annotation_col = meta_df,cluster_cols = F,show_rownames = F,scale = 'none')
dev.off()
proteomset_comb_norm3 <- proteomset_comb_norm2[,-(total_drop)]
col_table <- rep(1:5,each=4)[-(total_drop)]
df_pca_total  <- prcomp(t(proteomset_comb_norm3))
plot3d(df_pca_total$x[,1:3], col=col_table,type = 'p',size=11)
legend3d("topright", legend =rownames(meta),col=1:5,pch=16,cex=1)
snapshot3d(paste(outpath,'total_pca3d_pc1_pc3.tiff',sep = ''))
plot3d(df_pca_total$x[,c(1,3,2)], col=col_table,type = 'p',size=11)
legend3d("topright", legend =rownames(meta),col=1:5,pch=16,cex=1)
snapshot3d(paste(outpath,'total_pca3d_pc1_pc2.tiff',sep = ''))
plot3d(df_pca_total$x[,c(2,1,3)], col=col_table,type = 'p',size=11)
legend3d("topright", legend =rownames(meta),col=1:5,pch=16,cex=1)
snapshot3d(paste(outpath,'total_pca3d_pc2_pc3.tiff',sep = ''))
#phos
phosphoSet_comb_norm3 <- phosphoSet_comb_norm2[,-(phos_drop)]
col_table <- rep(2:6,each=4)[-(phos_drop)]
df_pca_phos  <- prcomp(t(phosphoSet_comb_norm3))
plot3d(df_pca_phos$x[,1:3], col=col_table,type = 'p',size=11)
legend3d("topright", legend =rownames(meta),col=1:5,pch=16,cex=1)
snapshot3d(paste(outpath,'phos_pca3d_pc1_pc3.tiff',sep = ''))
plot3d(df_pca_phos$x[,c(1,3,2)], col=col_table,type = 'p',size=11)
legend3d("topright", legend =rownames(meta),col=1:5,pch=16,cex=1)
snapshot3d(paste(outpath,'phos_pca3d_pc1_pc2.tiff',sep = ''))
plot3d(df_pca_phos$x[,c(2,1,3)], col=col_table,type = 'p',size=11)
legend3d("topright", legend =rownames(meta),col=1:5,pch=16,cex=1)
snapshot3d(paste(outpath,'phos_pca3d_pc2_pc3.tiff',sep = ''))
args='/test/'
args='/test/'
download_script = '/storage/htc/bdm/Collaboration/liu_rnaseq/src/download_fastq.sh'
ref_genome = '/storage/htc/bdm/ref_genomes/mouse/star_ref'
project_dir = '/storage/htc/bdm/Collaboration/liu_rnaseq_test/'
meta_file = '/storage/htc/bdm/Collaboration/liu_rnaseq/src/meta_info.csv'
rawdata_path <- paste(project_dir,'rawdata/',sep = '')
trim_data_path <- paste(project_dir,'trimdata/',sep = '')
alignment_result <- paste(project_dir,'alignment_result/',sep = '')
output_result <- paste(project_dir,'final_result/',sep = '')
job_name <- substr(gsub('.+/(.+)/','\\1',project_dir),1,8)
source('https://raw.githubusercontent.com/chrischen1/rnaseq/master/de_rnaseq.R')
job_name
